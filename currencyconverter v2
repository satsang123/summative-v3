/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SummativeProject;

import javax.swing.JOptionPane;

/**
 *
 * @author Satsang Adhikari
 */
public class MyCurrencyConverter extends javax.swing.JFrame {
   //declaring a string with currency units that I can make use of whenever user selects a country its corresponding currency will show up 
   //I will use the position of the values in this string to do the above task
    
    String[] currencyUnits = {
"units",
"US Dollar",
"Canadian Dollar",
"Japanese Yen",
"Chinese Yuan",
"English Pound",
"Brazillian Real",
"Indian Rupee",
"Australian Dollar",
"Mexican Peso",
"Korean Won",
"Russian Ruble",
"Swiss Franc",
"Saudi Riyal",
"South African Rand",
"Nepalese Rupee",
"European Euro"
};
 
 //rate for each currency in Turkish currency Lira 
    /* To save time and memory i decided to first convert any currency that user inputs to Lira
    then convert again from Lira to the currency that they selected to convert to. Lira acts as 
    the base unit so that I don't have to write 9 * 9 = 81 lines of code when I can do it in 
    much fewer lines
    */
    
double US_Dollar = 0.19;
double Canadian_Dollar = 0.25;
double Japanese_Yen = 21.23;
double Chinese_Yuan = 1.29;
double English_Pound = 0.15;
double Brazillian_Real = 0.73;
double Indian_Rupee = 13.37;
double Australian_Dollar = 0.26;
double Mexican_Peso = 3.77;
double Korean_Won = 210.53;
double Russian_Ruble = 12.39;
double Swiss_Franc = 0.19;
double Saudi_Riyal = 0.70;
double South_African_Rand = 2.65;
double Nepalese_Rupee = 21.46;
double European_Euro = 0.16;
    /**
     * Creates new form MyCurrencyConverter
     */
    public MyCurrencyConverter() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        secondCountry = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        countryFirst = new javax.swing.JComboBox<>();
        countrySecond = new javax.swing.JComboBox<>();
        t1 = new javax.swing.JTextField();
        t2 = new javax.swing.JTextField();
        firstCurrencyUnit = new javax.swing.JLabel();
        secondCurrencyUnit = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setText("From Currency of ");

        secondCountry.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        secondCountry.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "USA", "Canada", "Japan", "China", "England", "Brazil", "India", "Australia", "Mexico", "South Korea", "Russia", "Switzerland", "Saudi Arabia", "South Africa", "Nepal", "Europe" }));
        secondCountry.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                secondCountryItemStateChanged(evt);
            }
        });
        secondCountry.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                secondCountryActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton2.setText("Reset");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Felix Titling", 1, 36)); // NOI18N
        jLabel1.setText("Currency Converter");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setText("From Currency of ");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 4));

        jLabel5.setFont(new java.awt.Font("Felix Titling", 1, 36)); // NOI18N
        jLabel5.setText("Currency Converter");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setText("From Currency of ");

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setText("To Currency of");

        countryFirst.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        countryFirst.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "USA", "Canada", "Japan", "China", "England", "Brazil", "India", "Australia", "Mexico", "South Korea", "Russia", "Switzerland", "Saudi Arabia", "South Africa", "Nepal", "Europe" }));
        countryFirst.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                countryFirstItemStateChanged(evt);
            }
        });
        countryFirst.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countryFirstActionPerformed(evt);
            }
        });

        countrySecond.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        countrySecond.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select...", "USA", "Canada", "Japan", "China", "England", "Brazil", "India", "Australia", "Mexico", "South Korea", "Russia", "Switzerland", "Saudi Arabia", "South Africa", "Nepal", "Europe" }));
        countrySecond.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                countrySecondItemStateChanged(evt);
            }
        });
        countrySecond.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                countrySecondActionPerformed(evt);
            }
        });

        t1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        t1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t1ActionPerformed(evt);
            }
        });

        t2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        t2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                t2ActionPerformed(evt);
            }
        });

        firstCurrencyUnit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        firstCurrencyUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        firstCurrencyUnit.setText("units");

        secondCurrencyUnit.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        secondCurrencyUnit.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        secondCurrencyUnit.setText("units");

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton1.setText("Convert ");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jButton3.setText("Reset");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(186, Short.MAX_VALUE)
                .addComponent(jLabel5)
                .addGap(182, 182, 182))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(122, 122, 122)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(countryFirst, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, 223, Short.MAX_VALUE)
                            .addComponent(t1)
                            .addComponent(firstCurrencyUnit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 212, Short.MAX_VALUE)
                            .addComponent(countrySecond, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(t2)
                            .addComponent(secondCurrencyUnit, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(104, 104, 104))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addComponent(jLabel5)
                .addGap(37, 37, 37)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(countryFirst, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(countrySecond, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(t1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(t2, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(firstCurrencyUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(secondCurrencyUnit, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(46, 46, 46))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void secondCountryItemStateChanged(java.awt.event.ItemEvent evt) {                                               
       

    }                                              

    private void secondCountryActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             
    private boolean errorInConversion (String toDouble) {
        double checkForNegative;
        try {
            checkForNegative = Double.parseDouble(toDouble);
            if (checkForNegative > 0) {
                return false;
            }
        } catch (Exception e) {
            return true;
        }  
       return true; 
    }
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //reset all field when clicked

        countryFirst.setSelectedIndex(0);
        countrySecond.setSelectedIndex(0);
        t1.setText(null);
        t2.setText(null);

    }                                        

    private void countryFirstItemStateChanged(java.awt.event.ItemEvent evt) {                                              
        //here is the program that reads which country user selected and gives its corresponding currency unit
        int position = countryFirst.getSelectedIndex();

        firstCurrencyUnit.setText(currencyUnits[position]);

    }                                             

    private void countryFirstActionPerformed(java.awt.event.ActionEvent evt) {                                             
        // TODO add your handling code here:
    }                                            

    private void countrySecondItemStateChanged(java.awt.event.ItemEvent evt) {                                               
        //here is the program that reads which country user selected and gives its corresponding currency unit
        int position = countrySecond.getSelectedIndex();

        secondCurrencyUnit.setText(currencyUnits[position]);

    }                                              

    private void countrySecondActionPerformed(java.awt.event.ActionEvent evt) {                                              
        // TODO add your handling code here:
    }                                             

    private void t1ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void t2ActionPerformed(java.awt.event.ActionEvent evt) {                                   
        // TODO add your handling code here:
    }                                  

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        /*the conditions are set so that if user does not select both countries, and/or does not input anything,
        and/or gives an invalid input like letters or symbols,
        and/or inputs negative number and presses convert it brings out this error message
        */

        if (countryFirst.getSelectedIndex()==0 || countrySecond.getSelectedIndex()==0 || t1.getText().equals("") || errorInConversion(t1.getText())) {

            JOptionPane.showMessageDialog(null,
                "MAKE SURE YOU SELECT BOTH COUNTRIES AND GIVE VALID INPUT FOR CURRENCY","Error!",
                JOptionPane.ERROR_MESSAGE
            );
            return;

        }

        //currency conversion takes place here after user clicks on Convert button
        //first I get the user input from the text field they inputted number on
        double amountToChange = Double.parseDouble(t1.getText());
        //then convert the user input into Lira
        double amountInLira = 0.0;

        double amountChanged = 0.0;

        switch (countryFirst.getSelectedItem().toString()) {

            case "USA": amountInLira = amountToChange / US_Dollar; break;
            case "Canada": amountInLira = amountToChange / Canadian_Dollar; break;
            case "Japan": amountInLira = amountToChange / Japanese_Yen; break;
            case "China": amountInLira = amountToChange / Chinese_Yuan; break;
            case "England": amountInLira = amountToChange / English_Pound; break;
            case "Brazil": amountInLira = amountToChange / Brazillian_Real; break;
            case "India": amountInLira = amountToChange / Indian_Rupee; break;
            case "Australia": amountInLira = amountToChange / Australian_Dollar; break;
            case "Mexico": amountInLira = amountToChange / Mexican_Peso; break;
            case "South Korea": amountInLira = amountToChange / Korean_Won; break;
            case "Russia": amountInLira = amountToChange / Russian_Ruble; break;
            case "Switzerland": amountInLira = amountToChange / Swiss_Franc; break;
            case "Saudi Arabia": amountInLira = amountToChange / Saudi_Riyal; break;
            case "South Africa": amountInLira = amountToChange / South_African_Rand; break;
            case "Nepal": amountInLira = amountToChange / Nepalese_Rupee; break;
            case "Europe": amountInLira = amountToChange / European_Euro; break;
            default: amountInLira = 0.0;

        }

        switch (countrySecond.getSelectedItem().toString()) {

            case "USA": amountChanged = amountInLira * US_Dollar; break;
            case "Canada": amountChanged = amountInLira * Canadian_Dollar; break;
            case "Japan": amountChanged = amountInLira * Japanese_Yen; break;
            case "China": amountChanged = amountInLira * Chinese_Yuan; break;
            case "England": amountChanged = amountInLira * English_Pound; break;
            case "Brazil": amountChanged = amountInLira * Brazillian_Real; break;
            case "India": amountChanged = amountInLira * Indian_Rupee; break;
            case "Australia": amountChanged = amountInLira * Australian_Dollar; break;
            case "Mexico": amountChanged = amountInLira * Mexican_Peso; break;
            case "South Korea": amountChanged = amountInLira * Korean_Won; break;
            case "Russia": amountChanged = amountInLira * Russian_Ruble; break;
            case "Switzerland": amountChanged = amountInLira * Swiss_Franc; break;
            case "Saudi Arabia": amountChanged = amountInLira * Saudi_Riyal; break;
            case "South Africa": amountChanged = amountInLira * South_African_Rand; break;
            case "Nepal": amountChanged = amountInLira * Nepalese_Rupee; break;
            case "Europe": amountInLira = amountToChange / European_Euro; break;
            default: amountChanged = 0.0;

        }
        //outputs onto the second text field with 2 decimal digits
        String value = String.format("%.2f", amountChanged);
        t2.setText(value);

    }                                        

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {                                         
        //reset all field when clicked

        countryFirst.setSelectedIndex(0);
        countrySecond.setSelectedIndex(0);
        t1.setText(null);
        t2.setText(null);

    }                                        

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MyCurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MyCurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MyCurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MyCurrencyConverter.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MyCurrencyConverter().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.JComboBox<String> countryFirst;
    private javax.swing.JComboBox<String> countrySecond;
    private javax.swing.JLabel firstCurrencyUnit;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JComboBox<String> secondCountry;
    private javax.swing.JLabel secondCurrencyUnit;
    private javax.swing.JTextField t1;
    private javax.swing.JTextField t2;
    // End of variables declaration                   
}
